00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/10/2022 1:55:51 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Subroutine : DUART enable
00000000                             3  * Written by : Instructor
00000000                             4  * Date       : 2013
00000000                             5  * Description: used to initialize a 68681 DUART
00000000                             6  *-----------------------------------------------------------
00000000                             7  * Note, most DUART configurations are ignorant of UDS/LDS 
00000000                             8  * and thus are only active on odd addresses (since the lower 
00000000                             9  * data lines are usually run to the DUART data bus)
00000000                            10  ; *******************************************************************
00000000                            11  ; Constants: (Note the offsets to account for no A0)
00000000  =00020000                 12  DUART   EQU $020000     loaded in A0 when needed, regs are offsets
00000000  =00000001                 13  MR1A   EQU   1 Mode Register1
00000000  =00000001                 14  MR2A  EQU   1 points here after MR1A is set
00000000  =00000003                 15  SRA    EQU   3     Status Register (read)
00000000  =00000003                 16  CSRA   EQU   3     Clock Select Register
00000000  =00000005                 17  CRA   EQU   5 Command Register
00000000  =00000007                 18  TBA EQU   7     Transfer Holding Register
00000000  =00000007                 19  RBA EQU   7 Receive Holding Register
00000000  =00000009                 20  ACR EQU   9 Auxiliary control register
00000000  =00000000                 21  RxRDY EQU 0 Recieve ready bit position
00000000  =00000002                 22  TxRDY EQU 2 Transmit ready bit position
00000000  =000000CC                 23  BAUD EQU   $CC   baud rate value = 19,200 baud
00000000                            24  ; *******************************************************************
00000000  41F9 00020000             25  INIT_DUART      LEA   DUART,A0 A0 points to base DUART address
00000006                            26  ; Software reset:
00000006  117C 0030 0005            27                  MOVE.B #$30,CRA(A0) Reset TxA
0000000C  117C 0020 0005            28                  MOVE.B #$20,CRA(A0) Reset RxA
00000012  117C 0010 0005            29                  MOVE.B #$10,CRA(A0) Reset MRA pointer
00000018                            30  ; Initialization:
00000018  117C 0080 0009            31                  MOVE.B  #$80,ACR(A0) selects baud rate set 2
0000001E  117C 00CC 0003            32                  MOVE.B  #BAUD,CSRA(A0)  set 19.2k baud Rx/Tx
00000024  117C 0013 0001            33                  MOVE.B  #$13,MR1A(A0)   8-bits, no parity, 1 stop bit
0000002A                            34  ; This is the most important register to set in the 68681 DUART.
0000002A                            35  ; 07 sets: Normal mode, CTS and RTS disabled, stop bit length = 1
0000002A                            36  ; For testing load $#47 to enable auto-echo
0000002A  117C 0047 0001            37                  MOVE.B #$47,MR2A(A0)
00000030  117C 0005 0005            38                  MOVE.B #$05,CRA(A0) enable Tx and Rx
00000036  4E75                      39                  RTS
Line 40 WARNING: END directive missing, starting address not set

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACR                 9
BAUD                CC
CRA                 5
CSRA                3
DUART               20000
INIT_DUART          0
MR1A                1
MR2A                1
RBA                 7
RXRDY               0
SRA                 3
TBA                 7
TXRDY               2
